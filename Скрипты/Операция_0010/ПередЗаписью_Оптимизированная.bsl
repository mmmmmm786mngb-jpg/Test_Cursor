Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ПометкаУдаления ИЛИ ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	РегламентноеЗакрытиеПериода.ОчиститьВыбранныеАктивы(ЭтотОбъект);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И КонтролироватьУникальностьУстановкиССВПределахДня() Тогда
		Если ВПределахДняЕстьДокументУстановкаСС() И НЕ ПоВыбраннымАктивам Тогда
			ВызватьИсключение("Запрещено проводить несколько документов ""Установка справедливой стоимости"" в один день.");
		КонецЕсли;
	КонецЕсли;
	
	ВидОблигации = ПланыВидовХарактеристик.ВидыАктивов.Облигации;
	
	Для Каждого СтрокаТЧ Из Котировки Цикл
		
		// ОПТИМИЗАЦИЯ: Используем проверку типа вместо медленного метода ПринадлежитЭлементу()
		// - Получаем реквизит ВидАктива через метод ОбщегоНазначения.ЗначениеРеквизитаОбъекта() для безопасного чтения без загрузки объекта
		// - Все виды в иерархии "Облигации" имеют ТипЗначения = СправочникСсылка.Облигации
		// - Проверяем принадлежность через ТипЗначения.СодержитТип() без обращения к БД
		// Это позволяет избежать множественных запросов к БД для проверки иерархии
		ВидАктиваСтроки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТЧ.Актив, "ВидАктива");
		ПринадлежитОблигациям = ВидАктиваСтроки.ТипЗначения.СодержитТип(Тип("СправочникСсылка.Облигации"));
		
		Если НЕ ПринадлежитОблигациям
			ИЛИ ПоВыбраннымАктивам Тогда
			СтрокаТЧ.НКД = 0;
		КонецЕсли;
	КонецЦикла;
	
	Если ОбщегоНазначенияДУСобытия.ДокументВходитВРегламентныеОперации(ДокументОснование) Тогда
		Отказ = Справочники.РегламентныеПериоды.ПериодЗакрыт(Дата, Истина, РеглПериод, Портфель);
	КонецЕсли;
	
КонецПроцедуры
1)

КлючИЗначение	КлючИЗначение	"Дата"	10.10.2025 00:00:00
КлючИЗначение	КлючИЗначение	"Портфель"	ДУ 3645 (ПАО СК "Росгосстрах")
КлючИЗначение	КлючИЗначение	"Счет47010"	Массив с элементами:  47010
КлючИЗначение	КлючИЗначение	"ПоВыбраннымАктивам"	Ложь
КлючИЗначение	КлючИЗначение	"СписокВыбранныхАктивов"	Массив (пустой)

Функция ОстаткиАктивовПоСделкамРЕПО()


	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ЕПСОстатки.Субконто3 КАК БизнесПроцесс.СделкиРЕПО) КАК СделкаРЕПО,
		|	ВЫРАЗИТЬ(ЕПСОстатки.Субконто3 КАК БизнесПроцесс.СделкиРЕПО).Актив КАК Актив,
		|	ВЫРАЗИТЬ(ЕПСОстатки.Субконто3 КАК БизнесПроцесс.СделкиРЕПО).Актив.Объект.Эмитент КАК Эмитент,
		|	ВЫРАЗИТЬ(ЕПСОстатки.Субконто3 КАК БизнесПроцесс.СделкиРЕПО).ВалютаДокумента КАК Валюта,
		|	ВЫРАЗИТЬ(ЕПСОстатки.Субконто3 КАК БизнесПроцесс.СделкиРЕПО).ВидОбращаемости КАК ВидОбращаемости,
		|	ВЫРАЗИТЬ(ЕПСОстатки.Субконто3 КАК БизнесПроцесс.СделкиРЕПО).Количество КАК Количество,
		|	ВЫРАЗИТЬ(ЕПСОстатки.Субконто3 КАК БизнесПроцесс.СделкиРЕПО).Контрагент КАК Контрагент,
		|	ВЫРАЗИТЬ(ЕПСОстатки.Субконто3 КАК БизнесПроцесс.СделкиРЕПО).КратностьВзаиморасчетов КАК Кратность,
		|	ВЫРАЗИТЬ(ЕПСОстатки.Субконто3 КАК БизнесПроцесс.СделкиРЕПО).КурсВзаиморасчетов КАК Курс
		|ИЗ
		|	РегистрБухгалтерии.ЕПС.Остатки(
		|			&Дата,
		|			Счет В (&Счет47010),
		|			,
		|			Портфель = &Портфель
		|				И Субконто3 ССЫЛКА БизнесПроцесс.СделкиРЕПО
		|				И ВЫРАЗИТЬ(Субконто3 КАК БизнесПроцесс.СделкиРЕПО).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСделкаРЕПО.ОбратныйРЕПО)
		|				И НЕ ВЫРАЗИТЬ(Субконто3 КАК БизнесПроцесс.СделкиРЕПО).СделкаНапрямуюСБиржей
		|				И ВЫРАЗИТЬ(Субконто3 КАК БизнесПроцесс.СделкиРЕПО).Актив.Объект ССЫЛКА Справочник.Облигации
		|				И ВЫБОР
		|					КОГДА &ПоВыбраннымАктивам
		|						ТОГДА ВЫРАЗИТЬ(Субконто3 КАК БизнесПроцесс.СделкиРЕПО).Актив В (&СписокВыбранныхАктивов)
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ) КАК ЕПСОстатки";
	
	Запрос.Текст = ТекстЗапроса;
	
	МассивСчетовОблигаций = УчетЕПСПовтИсп.СчетаУчетаОблигаций();
	
	Запрос.УстановитьПараметр("Дата", НачалоДня(Дата));
	Запрос.УстановитьПараметр("Портфель", Портфель);
	Запрос.УстановитьПараметр("Счет47010", ПланыСчетов.ЕПС.СчетаПоСтроке("47010"));
	Запрос.УстановитьПараметр("ПоВыбраннымАктивам", ПоВыбраннымАктивам);
	Запрос.УстановитьПараметр("СписокВыбранныхАктивов", ВыбранныеАктивы.ВыгрузитьКолонку("Актив"));
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

2)

КлючИЗначение	КлючИЗначение	"ТаблицаАмортизации"	ТаблицаЗначений : пустая. Колонки: "Облигация", "НоминальнаяСтоимость", "ПроцентНоминала", "СуммаПогашения", "ОстатокНоминала", "КоэффициентАмортизации", "Эмитент", "Актив"
КлючИЗначение	КлючИЗначение	"СписокАктивов"	Массив: пустой массив
КлючИЗначение	КлючИЗначение	"СписокОблигацийДефолтныхЭмитентов"	Массив: пустой массив
КлючИЗначение	КлючИЗначение	"ДатаПогашения"	10.10.2025 00:00:00
КлючИЗначение	КлючИЗначение	"Портфель"	ДУ 3645 (ПАО СК "Росгосстрах")
КлючИЗначение	КлючИЗначение	"НачалоДня"	10.10.2025 00:00:00
КлючИЗначение	КлючИЗначение	"КонецДня"	10.10.2025 23:59:59
КлючИЗначение	КлючИЗначение	"ВидыОфертПогашения"	Массив: Досрочное погашение по праву эмитента, MCAL/BN
КлючИЗначение	КлючИЗначение	"ОфертыИсключения"	Массив: пустой массив


Процедура ЗаполнитьЦенныеБумаги(ИмяТабличнойЧасти, СписокАктивовПоОстаткам, ОблигацииДефолтныхЭмитентов, ТаблицаАмортизации)
	
	ЭтотОбъект[ИмяТабличнойЧасти].Очистить();	
	ОфертыИсключения = РегистрыСведений.ОфертыИсключения.ОфертыПортфеля(Портфель);	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАмортизации.Облигация КАК Облигация,
	|	ТаблицаАмортизации.НоминальнаяСтоимость КАК НоминальнаяСтоимость,
	|	ТаблицаАмортизации.ПроцентНоминала КАК ПроцентНоминала,
	|	ТаблицаАмортизации.СуммаПогашения КАК СуммаПогашения,
	|	ТаблицаАмортизации.ОстатокНоминала КАК ОстатокНоминала,
	|	ТаблицаАмортизации.КоэффициентАмортизации КАК КоэффициентАмортизации,
	|	ТаблицаАмортизации.Эмитент КАК Эмитент,
	|	ТаблицаАмортизации.Актив КАК Актив
	|ПОМЕСТИТЬ ВТ_АмортизацияТекущегоДня
	|ИЗ
	|	&ТаблицаАмортизации КАК ТаблицаАмортизации
	|ГДЕ
	|	ТаблицаАмортизации.ОстатокНоминала = 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Актив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидОбращаемостиЦБНаОРЦБСрезПоследних.Актив КАК Актив,
	|	ВидОбращаемостиЦБНаОРЦБСрезПоследних.ВидОбращаемости КАК ВидОбращаемости
	|ПОМЕСТИТЬ ВТ_ВидыОбращаемости
	|ИЗ
	|	РегистрСведений.ВидОбращаемостиЦБНаОРЦБ.СрезПоследних(&КонецДня, Актив В (&СписокАктивов)) КАК ВидОбращаемостиЦБНаОРЦБСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Актив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Активы.Объект КАК Объект,
	|	Активы.Ссылка КАК Актив,
	|	ВТ_ВидыОбращаемости.ВидОбращаемости КАК ВидОбращаемости
	|ПОМЕСТИТЬ ОбъектыАктивов
	|ИЗ
	|	Справочник.Активы КАК Активы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВидыОбращаемости КАК ВТ_ВидыОбращаемости
	|		ПО Активы.Ссылка = ВТ_ВидыОбращаемости.Актив
	|ГДЕ
	|	Активы.Ссылка В(&СписокАктивов)
	|	И НЕ Активы.Объект В (&СписокОблигацийДефолтныхЭмитентов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыОфертОблигаций.Актив КАК Актив,
	|	ДатыОфертОблигаций.Актив.Объект КАК АктивОбъект,
	|	ДатыОфертОблигаций.Регистратор.ВидОферты КАК ВидОферты,
	|	ДатыОфертОблигаций.Регистратор.ЦенаОферты КАК ЦенаОферты
	|ПОМЕСТИТЬ ВТ_ОбязательнаяОферта
	|ИЗ
	|	РегистрСведений.ДатыОфертОблигаций КАК ДатыОфертОблигаций
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(ДатыОфертОблигаций.Период, ДЕНЬ) = &НачалоДня
	|	И ДатыОфертОблигаций.Регистратор.ВидОферты В(&ВидыОфертПогашения)
	|	И ДатыОфертОблигаций.ВидДаты = ЗНАЧЕНИЕ(Перечисление.ВидыДатОферты.ДатаОферты)
	|	И ДатыОфертОблигаций.Актив В(&СписокАктивов)
	|	И НЕ ДатыОфертОблигаций.Регистратор В (&ОфертыИсключения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Актив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыОфертОблигаций.Период КАК Период,
	|	ДатыОфертОблигаций.Регистратор КАК Регистратор,
	|	ДатыОфертОблигаций.Актив КАК Актив
	|ПОМЕСТИТЬ ВТ_ДатыОфертОблигаций
	|ИЗ
	|	РегистрСведений.ДатыОфертОблигаций КАК ДатыОфертОблигаций
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(ДатыОфертОблигаций.Период, ДЕНЬ) = &ДатаПогашения
	|	И ДатыОфертОблигаций.ВидДаты = ЗНАЧЕНИЕ(Перечисление.ВидыДатОферты.ДатаОферты)
	|	И ДатыОфертОблигаций.Регистратор.ВидОферты В(&ВидыОфертПогашения)
	|	И ВЫБОР
	|			КОГДА ДатыОфертОблигаций.Регистратор.ОфертаОтменена
	|				ТОГДА ДатыОфертОблигаций.Регистратор.ДатаОтменыОферты > &КонецДня
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И НЕ ДатыОфертОблигаций.Регистратор В (&ОфертыИсключения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Актив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Актив КАК Актив,
	|	ВложенныйЗапрос.Облигация КАК Облигация,
	|	ВложенныйЗапрос.НоминальнаяСтоимость КАК НоминальнаяСтоимость,
	|	ВложенныйЗапрос.ИндексируемыйНоминал КАК ИндексируемыйНоминал,
	|	ВложенныйЗапрос.Амортизационная КАК Амортизационная,
	|	ВложенныйЗапрос.Оферта_MCAL_BN КАК Оферта_MCAL_BN,
	|	ВложенныйЗапрос.ВидОбращаемости КАК ВидОбращаемости,
	|	ВложенныйЗапрос.ПогашениеПоОферте КАК ПогашениеПоОферте,
	|	ВложенныйЗапрос.Приоритет КАК Приоритет,
	|	ВложенныйЗапрос.ЦенаОферты КАК ЦенаОферты
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОбъектыАктивов.Актив КАК Актив,
	|		ОбъектыАктивов.Объект КАК Облигация,
	|		Облигации.НоминальнаяСтоимость КАК НоминальнаяСтоимость,
	|		Облигации.ИндексируемыйНоминал КАК ИндексируемыйНоминал,
	|		Облигации.Амортизационная КАК Амортизационная,
	|		ЛОЖЬ КАК Оферта_MCAL_BN,
	|		ОбъектыАктивов.ВидОбращаемости КАК ВидОбращаемости,
	|		ЛОЖЬ КАК ПогашениеПоОферте,
	|		2 КАК Приоритет,
	|		0 КАК ЦенаОферты
	|	ИЗ
	|		ОбъектыАктивов КАК ОбъектыАктивов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Облигации КАК Облигации
	|			ПО ОбъектыАктивов.Объект = Облигации.Ссылка
	|	ГДЕ
	|		Облигации.ДатаПогашения = &ДатаПогашения
	|		И НЕ Облигации.Амортизационная
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОбъектыАктивов.Актив,
	|		ОбъектыАктивов.Объект,
	|		ВЫБОР
	|			КОГДА ДатыОфертОблигаций.Регистратор.ВидОферты = ЗНАЧЕНИЕ(Перечисление.ВидыОферты.MCAL_BN)
	|				ТОГДА ДатыОфертОблигаций.Регистратор.ЦенаОферты
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ДатыОфертОблигаций.Регистратор.ЦенаОферты = 0
	|						ТОГДА 100
	|					ИНАЧЕ ДатыОфертОблигаций.Регистратор.ЦенаОферты
	|				КОНЕЦ
	|		КОНЕЦ,
	|		Облигации.ИндексируемыйНоминал,
	|		Облигации.Амортизационная,
	|		ДатыОфертОблигаций.Регистратор.ВидОферты = ЗНАЧЕНИЕ(Перечисление.ВидыОферты.MCAL_BN),
	|		ОбъектыАктивов.ВидОбращаемости,
	|		ИСТИНА,
	|		1,
	|		0
	|	ИЗ
	|		ОбъектыАктивов КАК ОбъектыАктивов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Облигации КАК Облигации
	|			ПО ОбъектыАктивов.Объект = Облигации.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДатыОфертОблигаций КАК ДатыОфертОблигаций
	|			ПО ОбъектыАктивов.Актив = ДатыОфертОблигаций.Актив
	|	ГДЕ
	|		НЕ Облигации.Амортизационная
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТ_АмортизацияТекущегоДня.Актив,
	|		ВТ_АмортизацияТекущегоДня.Облигация,
	|		ВТ_АмортизацияТекущегоДня.СуммаПогашения,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ОбъектыАктивов.ВидОбращаемости,
	|		ЛОЖЬ,
	|		1,
	|		0
	|	ИЗ
	|		ВТ_АмортизацияТекущегоДня КАК ВТ_АмортизацияТекущегоДня
	|			ЛЕВОЕ СОЕДИНЕНИЕ ОбъектыАктивов КАК ОбъектыАктивов
	|			ПО ВТ_АмортизацияТекущегоДня.Актив = ОбъектыАктивов.Актив
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОбязательнаяОферта КАК ВТ_ОбязательнаяОферта
	|			ПО ВТ_АмортизацияТекущегоДня.Актив = ВТ_ОбязательнаяОферта.Актив
	|	ГДЕ
	|		НЕ ВТ_АмортизацияТекущегоДня.Облигация В (&СписокОблигацийДефолтныхЭмитентов)
	|		И ВТ_ОбязательнаяОферта.Актив ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Активы.Ссылка,
	|		ОблигацииАмортизационныеВыплаты.Ссылка,
	|		СУММА(ОблигацииАмортизационныеВыплаты.СуммаПогашения),
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ОбъектыАктивов.ВидОбращаемости,
	|		ИСТИНА,
	|		1,
	|		ВЫБОР
	|			КОГДА ВТ_ОбязательнаяОферта.ВидОферты = ЗНАЧЕНИЕ(Перечисление.ВидыОферты.MCAL_BN)
	|				ТОГДА ВТ_ОбязательнаяОферта.ЦенаОферты
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ВТ_ОбязательнаяОферта.ЦенаОферты = 0
	|						ТОГДА 100
	|					ИНАЧЕ ВТ_ОбязательнаяОферта.ЦенаОферты
	|				КОНЕЦ
	|		КОНЕЦ
	|	ИЗ
	|		Справочник.Облигации.АмортизационныеВыплаты КАК ОблигацииАмортизационныеВыплаты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОбязательнаяОферта КАК ВТ_ОбязательнаяОферта
	|			ПО ОблигацииАмортизационныеВыплаты.Ссылка = ВТ_ОбязательнаяОферта.АктивОбъект
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Активы КАК Активы
	|				ЛЕВОЕ СОЕДИНЕНИЕ ОбъектыАктивов КАК ОбъектыАктивов
	|				ПО Активы.Ссылка = ОбъектыАктивов.Актив
	|			ПО ОблигацииАмортизационныеВыплаты.Ссылка = Активы.Объект
	|	ГДЕ
	|		НЕ ОблигацииАмортизационныеВыплаты.Ссылка В (&СписокОблигацийДефолтныхЭмитентов)
	|		И ОблигацииАмортизационныеВыплаты.ДатаПогашения >= &НачалоДня
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Активы.Ссылка,
	|		ОблигацииАмортизационныеВыплаты.Ссылка,
	|		ВЫБОР
	|			КОГДА ВТ_ОбязательнаяОферта.ВидОферты = ЗНАЧЕНИЕ(Перечисление.ВидыОферты.MCAL_BN)
	|				ТОГДА ВТ_ОбязательнаяОферта.ЦенаОферты
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ВТ_ОбязательнаяОферта.ЦенаОферты = 0
	|						ТОГДА 100
	|					ИНАЧЕ ВТ_ОбязательнаяОферта.ЦенаОферты
	|				КОНЕЦ
	|		КОНЕЦ,
	|		ОбъектыАктивов.ВидОбращаемости) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	Актив,
	|	Приоритет";
	
	Запрос.УстановитьПараметр("ТаблицаАмортизации", ТаблицаАмортизации);
	Запрос.УстановитьПараметр("СписокАктивов", ОбщегоНазначенияКлиентСервер.СвернутьМассив(СписокАктивовПоОстаткам));
	Запрос.УстановитьПараметр("СписокОблигацийДефолтныхЭмитентов", ОблигацииДефолтныхЭмитентов);
	Запрос.УстановитьПараметр("ДатаПогашения", НачалоДня(Дата));
	Запрос.УстановитьПараметр("Портфель", Портфель);
	Запрос.УстановитьПараметр("НачалоДня", НачалоДня(Дата));
	Запрос.УстановитьПараметр("КонецДня", КонецДня(Дата));
	Запрос.УстановитьПараметр("ВидыОфертПогашения",РегистрыСведений.ДатыОфертОблигаций.ВидыОфертПогашениеАктива(Портфель,КонецДня(Дата)));
	Запрос.УстановитьПараметр("ОфертыИсключения", ОфертыИсключения);
		
	Результат = Запрос.Выполнить().Выгрузить();
		
	ОбщегоНазначенияДУ.ДобавитьВЛогОтладки(Запрос, "" + Ссылка + "Документ.ПогашениеОблигаций.МодульОбъекта: ЗаполнитьЦенныеБумаги");
	
	ПредыдущийАктив = Неопределено;
	Для каждого ТекСтрока Из Результат Цикл
		
		Если ТекСтрока.Актив = ПредыдущийАктив Тогда
			Продолжить;	
		КонецЕсли;
		
		ПредыдущийАктив = ТекСтрока.Актив; 
		Если ТекСтрока.ПогашениеПоОферте И НЕ ТекСтрока.Амортизационная Тогда
			НоминальнаяСтоимость = Справочники.Облигации.ПолучитьНоминальнуюСтоимость(ТекСтрока.Облигация, НачалоДня(Дата));
			ЦенаОферты = ТекСтрока.НоминальнаяСтоимость;
			ТекСтрока.НоминальнаяСтоимость = Окр(ЦенаОферты * НоминальнаяСтоимость / 100, 6);
		ИначеЕсли ТекСтрока.ПогашениеПоОферте И ТекСтрока.Амортизационная Тогда
			ТекСтрока.НоминальнаяСтоимость = Окр(ТекСтрока.ЦенаОферты * ТекСтрока.НоминальнаяСтоимость / 100, 2);	
		ИначеЕсли ТекСтрока.ИндексируемыйНоминал Тогда
			НоминальнаяСтоимость = Справочники.Облигации.ПолучитьНоминальнуюСтоимость(ТекСтрока.Облигация, НачалоДня(Дата));
			ТекСтрока.НоминальнаяСтоимость = НоминальнаяСтоимость;
		КонецЕсли;
		
		НоваяСтрока = ЭтотОбъект[ИмяТабличнойЧасти].Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока); 
		
	КонецЦикла;
		
КонецПроцедуры


3)

КлючИЗначение	КлючИЗначение	"Портфель"	ДУ 3645 (ПАО СК "Росгосстрах")
КлючИЗначение	КлючИЗначение	"Период"	10.10.2025 00:00:00
КлючИЗначение	КлючИЗначение	"НУ"	Истина
КлючИЗначение	КлючИЗначение	"МассивСчетовОблигаций"	Массив:
50104
50105
50106
50107
50108
50109
50110
50118
50205
50206
50207
50208
50209
50210
50211
50218
50305
50306
50307
50308
50309
50310
50311
50318
50411
50412
50413
50414
50415
50416
50417
50418

Процедура ПолучитьОстаткиПоЕПС(СписокАктивовПоОстаткам)
	
	Если Не ЕПС Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕПСОстатки.Субконто1 КАК Актив
	|ИЗ
	|	РегистрБухгалтерии.ЕПС.Остатки(&Период, Счет В (&МассивСчетовОблигаций), , Портфель = &Портфель) КАК ЕПСОстатки
	|ГДЕ
	|	(&НУ ИЛИ &ЕПС)";
	
	МетодНачисленияАмортизацииПремииДисконта = МетодНачисленияАмортизацииПремииДисконта();
	Если МетодНачисленияАмортизацииПремииДисконта = Перечисления.МетодыНачисленияАмортизацииПремииДисконта.Линейный 
		Или МетодНачисленияАмортизацииПремииДисконта = Перечисления.МетодыНачисленияАмортизацииПремииДисконта.ПоЭСП
		Или МетодНачисленияАмортизацииПремииДисконта = Перечисления.МетодыНачисленияАмортизацииПремииДисконта.ЛинейноИнтервальный Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НУ", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕПС", "ИСТИНА");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕПС", "ЕПСОстатки.СуммаОстатокДт > 0");
		Если НУ_ЕПС тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НУ", "ЕПСОстатки.СуммаНУОстатокДт > 0");
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	МассивСчетовОблигаций = УчетЕПСПовтИсп.СчетаУчетаОблигаций();
	
	Запрос.УстановитьПараметр("Портфель", Портфель);
	Запрос.УстановитьПараметр("Период", НачалоДня(Дата));
	Запрос.УстановитьПараметр("НУ", НУ_ЕПС);
	Запрос.УстановитьПараметр("МассивСчетовОблигаций", МассивСчетовОблигаций);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокАктивовПоОстаткам.Добавить(Выборка.Актив);
	КонецЦикла;
	
КонецПроцедуры

4)
Функция ПолучитьДанныеАмортизации(Облигации, ДатаРасчета = '00010101', АмортизацияФиксированнойПоДате = Ложь,  Отказ = Ложь) Экспорт  //MTF-767
	
	ТаблицаРезультата = Новый ТаблицаЗначений;
	ТаблицаРезультата.Колонки.Добавить("Облигация",Новый ОписаниеТипов("СправочникСсылка.Облигации"));
	ТаблицаРезультата.Колонки.Добавить("КоэффициентАмортизации", Новый ОписаниеТипов("Число"));
	ТаблицаРезультата.Колонки.Добавить("СуммаПогашения", Новый ОписаниеТипов("Число"));
	ТаблицаРезультата.Колонки.Добавить("ОстатокНоминала", Новый ОписаниеТипов("Число"));
	
	СписокАктивов = Новый Массив;
	
	Если ТипЗнч(Облигации) = Тип("СправочникСсылка.Облигации") или  ТипЗнч(Облигации) = Тип("СправочникСсылка.Активы") тогда
		СписокАктивов.Добавить(Облигации);
	ИначеЕсли ТипЗнч(Облигации) = Тип("Массив") тогда
		СписокАктивов = Облигации;
	Иначе
		Отказ = Истина;
		Возврат ТаблицаРезультата;
	КонецЕсли;
	
	Если ДатаРасчета = '00010101' тогда
		ДатаРасчета = ТекущаяДата();
	КонецЕсли;
	
	//Обработаем массив, возможно переданы активы, а не облигации
	ВидОблигации = ПланыВидовХарактеристик.ВидыАктивов.Облигации;
	СписокОблигаций = Новый Массив;
	
	для каждого Элемент из СписокАктивов цикл
		
		ТипЭлемента = ТипЗнч(Элемент);
		Если ТипЭлемента = Тип("СправочникСсылка.Облигации") тогда
			СписокОблигаций.Добавить(Элемент);
		ИначеЕсли ТипЭлемента = Тип("СправочникСсылка.Активы") и Элемент.ВидАктива.ПринадлежитЭлементу(ВидОблигации) тогда
			СписокОблигаций.Добавить(Элемент.Объект);
		КонецЕсли;		
		
	КонецЦикла;
/// -- код ---
КонецФункции

Прмечание: ВидАктива имеет тип ПланВидовХарактеристикСсылка.ВидыАктивов (который может быть иерархическим)
Вопрос такой, а можно как то проверять по типу вида характеристики? Эта характеристика составного типа, а нас интересует Облигация.
Т.е. Элемент.ВидАктива.ТипЗначения - это ОписаниеТипов Облигация


// Описание: Получает остатки НКД и УКД по облигациям
//
// Параметры:
//   Параметры - Структура - структура параметров
//     .Портфель          - СправочникСсылка.Портфели          - портфель
//     .Дата              - Дата                               - дата получения остатков
//     .ТаблицаАктивов    - ТаблицаЗначений                    - таблица активов
//     .МоментВремени     - Дата (необязательный)              - момент времени
//     .Регистратор       - ДокументОбъект                     - регистратор
//
// Возвращаемое значение:
//   ТаблицаЗначений - остатки НКД и УКД по облигациям (СчетУчетаАктива, Партия, Актив, ВалютаЦБ,
//   ОстатокНКДРуб, ОстатокНКДВал, ОстатокНКДНу, ОстатокУКДРуб, ОстатокУКДВал, ОстатокУКДНу,
//   КоличествоОстатокЦБ, ЭтоПоследнийКупон, ПогашениеПоОферте, ЭмитентНеРезидент)
//
Функция ОстаткиНКД(Параметры)
	СчетаУчетаОблигаций = УчетЕПСПовтИсп.СчетаУчетаОблигаций();
	
	#Область БЛОКИРОВКА
	Блокировка = Новый БлокировкаДанных;
	Для Каждого Счет Из СчетаУчетаОблигаций Цикл
		БлокировкаЕПС = Блокировка.Добавить("РегистрБухгалтерии.ЕПС");
		БлокировкаЕПС.УстановитьЗначение("Период", Новый Диапазон( , Параметры.Дата));
		БлокировкаЕПС.УстановитьЗначение("Портфель", Параметры.Портфель);
		БлокировкаЕПС.УстановитьЗначение("Счет", Счет);
		БлокировкаЕПС.ИсточникДанных = Параметры.ТаблицаАктивов;
		БлокировкаЕПС.ИспользоватьИзИсточникаДанных("Субконто1", "Актив");
	КонецЦикла;
	Блокировка.Заблокировать();
	#КонецОбласти
	
	Запрос = Новый Запрос;
	// Предварительно получаем только нужные облигации и их данные
	Запрос.Текст =
		"// 1. Получаем активы → облигации (быстро, по ссылке)
		|ВЫБРАТЬ
		|	Таб.Актив КАК Актив,
		|	ВЫРАЗИТЬ(Таб.Актив КАК Справочник.Активы).Объект КАК Облигация,
		|	ЕСТЬNULL(Облигации.ДатаПогашения, &ПустаяДата) КАК ДатаПогашения
		|ПОМЕСТИТЬ ВТ_АктивыОблигации
		|ИЗ
		|	&ТаблицаАктивов КАК Таб
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Облигации КАК Облигации
		|		ПО ВЫРАЗИТЬ(Таб.Актив КАК Справочник.Активы).Объект = Облигации.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО Актив
		|;
		|
		|// 2. Получаем последнюю дату купона (одна строка на актив)
		|ВЫБРАТЬ
		|	КупонныеПериоды.Владелец КАК Облигация,
		|	МАКСИМУМ(КупонныеПериоды.ДатаОкончанияКупонногоПериода) КАК ДатаОкончанияКупона
		|ПОМЕСТИТЬ ВТ_ПоследнийКупон
		|ИЗ
		|	Справочник.КупонныеПериоды КАК КупонныеПериоды
		|ГДЕ
		|	КупонныеПериоды.Владелец В (
		|		ВЫБРАТЬ Облигация КАК Облигация ИЗ ВТ_АктивыОблигации ГДЕ Облигация ЕСТЬ НЕ NULL
		|	)
		|	И НЕ КупонныеПериоды.ПометкаУдаления
		|СГРУППИРОВАТЬ ПО
		|	КупонныеПериоды.Владелец
		|
		|ИНДЕКСИРОВАТЬ ПО Облигация
		|;
		|
		|// 3. Основные остатки - один запрос
		|ВЫБРАТЬ
		|	ЕПСОстатки.Счет КАК Счет,
		|	ЕПСОстатки.Субконто1 КАК Актив,
		|	ЕПСОстатки.Субконто3 КАК Партия,
		|	ЕПСОстатки.Валюта КАК ВалютаЦБ,
		|	СУММА(
		|		ВЫБОР КОГДА ЕПСОстатки.Субконто2 = &ЧастьЦеннаяБумага
		|			ТОГДА ЕПСОстатки.КоличествоОстатокДт ИНАЧЕ 0 КОНЕЦ
		|	) КАК КоличествоОстатокЦБ,
		|	СУММА(
		|		ВЫБОР КОГДА ЕПСОстатки.Субконто2 = &ЧастьКупонныйДоход
		|			ТОГДА ЕПСОстатки.СуммаОстатокДт ИНАЧЕ 0 КОНЕЦ
		|	) КАК ОстатокНКДРуб,
		|	СУММА(
		|		ВЫБОР КОГДА ЕПСОстатки.Субконто2 = &ЧастьКупонныйДоход
		|			ТОГДА ЕПСОстатки.ВалютнаяСуммаОстатокДт ИНАЧЕ 0 КОНЕЦ
		|	) КАК ОстатокНКДВал,
		|	СУММА(
		|		ВЫБОР КОГДА ЕПСОстатки.Субконто2 = &ЧастьКупонныйДоход
		|			ТОГДА ЕПСОстатки.СуммаНУОстатокДт ИНАЧЕ 0 КОНЕЦ
		|	) КАК ОстатокНКДНу,
		|	СУММА(
		|		ВЫБОР КОГДА ЕПСОстатки.Субконто2 = &ЧастьУплаченныйКупонныйДоход
		|			ТОГДА ЕПСОстатки.СуммаОстатокДт ИНАЧЕ 0 КОНЕЦ
		|	) КАК ОстатокУКДРуб,
		|	СУММА(
		|		ВЫБОР КОГДА ЕПСОстатки.Субконто2 = &ЧастьУплаченныйКупонныйДоход
		|			ТОГДА ЕПСОстатки.ВалютнаяСуммаОстатокДт ИНАЧЕ 0 КОНЕЦ
		|	) КАК ОстатокУКДВал,
		|	СУММА(
		|		ВЫБОР КОГДА ЕПСОстатки.Субконто2 = &ЧастьУплаченныйКупонныйДоход
		|			ТОГДА ЕПСОстатки.СуммаНУОстатокДт ИНАЧЕ 0 КОНЕЦ
		|	) КАК ОстатокУКДНу,
		|	АктивыОблигации.ДатаПогашения КАК ДатаПогашения,
		|	ПоследнийКупон.ДатаОкончанияКупона КАК ДатаОкончанияКупона,
		|	АктивыОблигации.Облигация.Эмитент.НеРезидент КАК ЭмитентНеРезидент
		|ПОМЕСТИТЬ ВсеОстатки
		|ИЗ
		|	РегистрБухгалтерии.ЕПС.Остатки(
		|		&МоментВремени,
		|		Счет В (&Счет),
		|		ВидыСубконто = &ВидыСубконтоЕПС,
		|		Портфель = &Портфель
		|		И Субконто1 В (&АктивыОблигации)
		|	) КАК ЕПСОстатки
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АктивыОблигации КАК АктивыОблигации
		|		ПО ЕПСОстатки.Субконто1 = АктивыОблигации.Актив
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследнийКупон КАК ПоследнийКупон
		|		ПО АктивыОблигации.Облигация = ПоследнийКупон.Облигация
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕПСОстатки.Счет,
		|	ЕПСОстатки.Субконто1,
		|	ЕПСОстатки.Субконто3,
		|	ЕПСОстатки.Валюта,
		|	АктивыОблигации.ДатаПогашения,
		|	ПоследнийКупон.ДатаОкончанияКупона,
		|	АктивыОблигации.Облигация.Эмитент.НеРезидент
		|
		|ИНДЕКСИРОВАТЬ ПО Актив
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|// Финальный результат
		|ВЫБРАТЬ
		|	ВсеОстатки.Счет КАК СчетУчетаАктива,
		|	ВсеОстатки.Партия КАК Партия,
		|	ВсеОстатки.Актив КАК Актив,
		|	ВсеОстатки.ВалютаЦБ КАК ВалютаЦБ,
		|	ВсеОстатки.ОстатокНКДРуб КАК ОстатокНКДРуб,
		|	ВсеОстатки.ОстатокНКДВал КАК ОстатокНКДВал,
		|	ВсеОстатки.ОстатокНКДНу КАК ОстатокНКДНу,
		|	ВсеОстатки.ОстатокУКДРуб КАК ОстатокУКДРуб,
		|	ВсеОстатки.ОстатокУКДВал КАК ОстатокУКДВал,
		|	ВсеОстатки.ОстатокУКДНу КАК ОстатокУКДНу,
		|	ВсеОстатки.КоличествоОстатокЦБ КАК КоличествоОстатокЦБ,
		|	НАЧАЛОПЕРИОДА(ЕСТЬNULL(ВсеОстатки.ДатаОкончанияКупона, &ПустаяДата), ДЕНЬ) = НАЧАЛОПЕРИОДА(&ДатаДокумента, ДЕНЬ)
		|		И НАЧАЛОПЕРИОДА(ЕСТЬNULL(ВсеОстатки.ДатаОкончанияКупона, &ПустаяДата), ДЕНЬ) = НАЧАЛОПЕРИОДА(ВсеОстатки.ДатаПогашения, ДЕНЬ)
		|		КАК ЭтоПоследнийКупон,
		|	ЛОЖЬ КАК ПогашениеПоОферте,
		|	ВсеОстатки.ЭмитентНеРезидент КАК ЭмитентНеРезидент
		|ИЗ
		|	ВсеОстатки КАК ВсеОстатки
		|ГДЕ
		|	ВсеОстатки.КоличествоОстатокЦБ > 0";
	
	// Параметры запроса
	Запрос.УстановитьПараметр("Счет", СчетаУчетаОблигаций);
	Запрос.УстановитьПараметр("Портфель", Параметры.Портфель);
	Запрос.УстановитьПараметр("ДатаДокумента", Параметры.Дата);
	Запрос.УстановитьПараметр("ТаблицаАктивов", Параметры.ТаблицаАктивов);
	Запрос.УстановитьПараметр("АктивыОблигации", УчетЕПС.ОблигацииИз(Параметры.ТаблицаАктивов));
	Запрос.УстановитьПараметр("ЧастьЦеннаяБумага", Перечисления.ЧастиЦенныхБумаг.ЦеннаяБумага);
	Запрос.УстановитьПараметр("ЧастьКупонныйДоход", Перечисления.ЧастиЦенныхБумаг.КупонныйДоход);
	Запрос.УстановитьПараметр("ЧастьУплаченныйКупонныйДоход", Перечисления.ЧастиЦенныхБумаг.УплаченныйКупонныйДоход);
	Запрос.УстановитьПараметр("ПустаяДата", Дата(1, 1, 1));
	
	// Виды субконто для фильтрации
	ВидыСубконтоЕПС = Новый Массив;
	ВидыСубконтоЕПС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоЕПС.ФинансовыеИнструменты);
	ВидыСубконтоЕПС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоЕПС.ЧастиЦенныхБумаг);
	ВидыСубконтоЕПС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоЕПС.Партии);
	Запрос.УстановитьПараметр("ВидыСубконтоЕПС", ВидыСубконтоЕПС);
	
	// Определение момента времени
	Попытка
		Если Параметры.Свойство("МоментВремени") И ЗначениеЗаполнено(Параметры.МоментВремени) Тогда
			Запрос.УстановитьПараметр("МоментВремени", Параметры.МоментВремени);
		ИначеЕсли Параметры.Свойство("Регистратор") И ЗначениеЗаполнено(Параметры.Регистратор) Тогда
			Запрос.УстановитьПараметр("МоментВремени", Параметры.Регистратор.МоментВремени());
		Иначе
			Запрос.УстановитьПараметр("МоментВремени", Новый Граница(Параметры.Дата, ВидГраницы.Включая));
		КонецЕсли;
	Исключение
		Запрос.УстановитьПараметр("МоментВремени", Новый Граница(Параметры.Дата, ВидГраницы.Включая));
	КонецПопытки;
	
	ОбщегоНазначенияДУ.ДобавитьВЛогОтладки(Запрос, "ОбщийМодуль.УчетАктивовЕПС.ОстаткиНКД");
	Результат = Запрос.Выполнить().Выгрузить();
	
	// Постобработка для ПогашениеПоОферте
	ЕстьКолонка = Параметры.ТаблицаАктивов.Колонки.Найти("ПогашениеПоОферте") <> Неопределено;
	
	Если ЕстьКолонка Тогда
		СтрокиСОфертой = Параметры.ТаблицаАктивов.НайтиСтроки(Новый Структура("ПогашениеПоОферте", Истина));
		
		Если СтрокиСОфертой.Количество() > 0 Тогда
			ИндексОферт = Новый Соответствие;
			Для Каждого СтрОферта Из СтрокиСОфертой Цикл
				ИндексОферт.Вставить(СтрОферта.Актив, Истина);
			КонецЦикла;
			
			Для Каждого СтрРезультат Из Результат Цикл
				Если ИндексОферт[СтрРезультат.Актив] = Истина Тогда
					СтрРезультат.ПогашениеПоОферте = Истина;
					СтрРезультат.ЭтоПоследнийКупон = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
Процедура ПолучитьОстаткиПоЕПС(СписокАктивовПоОстаткам)
	
	Если НЕ ЕПС Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	МетодНачисленияАмортизацииПремииДисконта = МетодНачисленияАмортизацииПремииДисконта();
	// ОПТИМИЗАЦИЯ: Определяем код метода заранее для упрощения логики
	ЛинейныйИлиАналогичныйМетод = (МетодНачисленияАмортизацииПремииДисконта = Перечисления.МетодыНачисленияАмортизацииПремииДисконта.Линейный
			ИЛИ МетодНачисленияАмортизацииПремииДисконта = Перечисления.МетодыНачисленияАмортизацииПремииДисконта.ПоЭСП
			ИЛИ МетодНачисленияАмортизацииПремииДисконта = Перечисления.МетодыНачисленияАмортизацииПремииДисконта.ЛинейноИнтервальный);
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЕПСОстатки.Субконто1 КАК Актив
		|ИЗ
		|	РегистрБухгалтерии.ЕПС.Остатки(&Период, Счет В (&МассивСчетовОблигаций), &МассивСубконтоЕПС, Портфель = &Портфель) КАК ЕПСОстатки
		|ГДЕ
		|	ВЫБОР
		|		КОГДА &ЛинейныйИлиАналогичныйМетод
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ
		|			ЕПСОстатки.СуммаОстатокДт > 0
		|			ИЛИ (&НУ И ЕПСОстатки.СуммаНУОстатокДт > 0)
		|	КОНЕЦ";
	
	Запрос.Текст = ТекстЗапроса;
	
	МассивСубконтоЕПС = Новый Массив;
	МассивСубконтоЕПС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоЕПС.ФинансовыеИнструменты);
	
	МассивСчетовОблигаций = УчетЕПСПовтИсп.СчетаУчетаОблигаций();
	
	Запрос.УстановитьПараметр("Портфель", Портфель);
	Запрос.УстановитьПараметр("Период", НачалоДня(Дата));
	Запрос.УстановитьПараметр("НУ", НУ_ЕПС);
	Запрос.УстановитьПараметр("ЛинейныйИлиАналогичныйМетод", ЛинейныйИлиАналогичныйМетод);
	Запрос.УстановитьПараметр("МассивСчетовОблигаций", МассивСчетовОблигаций);
	Запрос.УстановитьПараметр("МассивСубконтоЕПС", МассивСубконтоЕПС);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокАктивовПоОстаткам.Добавить(Выборка.Актив);
	КонецЦикла;
	
КонецПроцедуры